<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans" 
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-4.2.xsd">

    <http auto-config="true">
        <intercept-url pattern="/" access="permitAll" />
        <intercept-url pattern="/index.htm" access="permitAll" />
        <intercept-url pattern="/purchases/register.htm" access="permitAll" />
        <intercept-url pattern="/purchases/**" access="hasRole('USER')" />
        <intercept-url pattern="/purchases**" access="hasRole('USER')" />
    </http>
    
    <!--     <form-login
    login-page='/login.htm'
    default-target-url="/homepage.html"
    authentication-failure-url="/login.html?error=true" />-->
 
    <!--<logout logout-success-url="/index.htm" />-->

    <authentication-manager>
        <authentication-provider>
            <user-service>
 <user name="r0487637" password="test" authorities="ROLE_USER"/>
 </user-service>
            
<!--            <jdbc-user-service data-source-ref="dataSource"
                               users-by-username-query=
"select username,password, enabled from users where username=?"
                               authorities-by-username-query=
"select u.userid, r.role from user u inner join user_role ur on(u.userid=ur.userid) inner join role r on(ur.role_id=r.role_id) where u.userid=?" />-->
        </authentication-provider>
    </authentication-manager>

</beans:beans>
